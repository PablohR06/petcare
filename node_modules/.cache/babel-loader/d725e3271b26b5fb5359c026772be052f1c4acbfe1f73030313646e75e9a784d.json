{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { faker } from '@faker-js/faker';\nimport HomePage from './components/HomePage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ControlPanel from './components/Dashboard/ControlPanel';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [superAdminCredentials, setSuperAdminCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    const generateSuperAdminCredentials = () => {\n      const email = faker.internet.email();\n      const password = faker.internet.password();\n      setSuperAdminCredentials({\n        email,\n        password\n      });\n      // Aquí puedes agregar lógica para guardar estas credenciales en un sistema de autenticación simulado\n      console.log(`SuperAdmin Email: ${email}, Password: ${password}`);\n    };\n    generateSuperAdminCredentials();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"SuperAdmin Email: \", superAdminCredentials.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"SuperAdmin Password: \", superAdminCredentials.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/control-panel/*\",\n          element: /*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3dTcsmEzOYiSbHSopRxLOjmrooE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","faker","HomePage","Login","Register","ControlPanel","jsxDEV","_jsxDEV","App","_s","superAdminCredentials","setSuperAdminCredentials","email","password","generateSuperAdminCredentials","internet","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Proyectos/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { faker } from '@faker-js/faker';\nimport HomePage from './components/HomePage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ControlPanel from './components/Dashboard/ControlPanel';\nimport './App.css';\n\nconst App = () => {\n  const [superAdminCredentials, setSuperAdminCredentials] = useState({ email: '', password: '' });\n\n  useEffect(() => {\n    const generateSuperAdminCredentials = () => {\n      const email = faker.internet.email();\n      const password = faker.internet.password();\n      setSuperAdminCredentials({ email, password });\n      // Aquí puedes agregar lógica para guardar estas credenciales en un sistema de autenticación simulado\n      console.log(`SuperAdmin Email: ${email}, Password: ${password}`);\n    };\n\n    generateSuperAdminCredentials();\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <p>SuperAdmin Email: {superAdminCredentials.email}</p>\n        <p>SuperAdmin Password: {superAdminCredentials.password}</p>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/control-panel/*\" element={<ControlPanel />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}