{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\my-app\\\\src\\\\components\\\\AnimalList.js\";\nimport React from 'react';\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimalList = () => {\n  const animals = [{\n    name: 'Aqua',\n    gender: 'Hembra',\n    birthDate: '2021-01-15',\n    status: 'En adopción',\n    photo: 'path/to/photo1.jpg'\n  }, {\n    name: 'Aries',\n    gender: 'Macho',\n    birthDate: '2020-05-10',\n    status: 'En adopción',\n    photo: 'path/to/photo2.jpg'\n  }, {\n    name: 'Baileys',\n    gender: 'Hembra',\n    birthDate: '2019-03-22',\n    status: 'En adopción',\n    photo: 'path/to/photo3.jpg'\n  }\n  // Agrega más animales según sea necesario\n  ];\n  const calculateAge = birthDate => {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    const diff = today - birth;\n    const ageInDays = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (ageInDays < 30) {\n      return `${ageInDays} días`;\n    } else if (ageInDays < 365) {\n      return `${Math.floor(ageInDays / 30)} meses`;\n    } else {\n      return `${Math.floor(ageInDays / 365)} años`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Listado de animales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: animals.map((animal, index) => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: animal.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: animal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"G\\xE9nero:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), \" \", animal.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Edad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), \" \", calculateAge(animal.birthDate), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), \" \", animal.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Ver m\\xE1s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = AnimalList;\nexport default AnimalList;\nvar _c;\n$RefreshReg$(_c, \"AnimalList\");","map":{"version":3,"names":["React","Card","Button","Row","Col","jsxDEV","_jsxDEV","AnimalList","animals","name","gender","birthDate","status","photo","calculateAge","birth","Date","today","diff","ageInDays","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","animal","index","sm","md","lg","className","Img","variant","src","Body","Title","Text","_c","$RefreshReg$"],"sources":["C:/Proyectos/my-app/src/components/AnimalList.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\n\r\nconst AnimalList = () => {\r\n  const animals = [\r\n    { name: 'Aqua', gender: 'Hembra', birthDate: '2021-01-15', status: 'En adopción', photo: 'path/to/photo1.jpg' },\r\n    { name: 'Aries', gender: 'Macho', birthDate: '2020-05-10', status: 'En adopción', photo: 'path/to/photo2.jpg' },\r\n    { name: 'Baileys', gender: 'Hembra', birthDate: '2019-03-22', status: 'En adopción', photo: 'path/to/photo3.jpg' },\r\n    // Agrega más animales según sea necesario\r\n  ];\r\n\r\n  const calculateAge = (birthDate) => {\r\n    const birth = new Date(birthDate);\r\n    const today = new Date();\r\n    const diff = today - birth;\r\n    const ageInDays = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n\r\n    if (ageInDays < 30) {\r\n      return `${ageInDays} días`;\r\n    } else if (ageInDays < 365) {\r\n      return `${Math.floor(ageInDays / 30)} meses`;\r\n    } else {\r\n      return `${Math.floor(ageInDays / 365)} años`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Listado de animales</h2>\r\n      <Row>\r\n        {animals.map((animal, index) => (\r\n          <Col key={index} sm={12} md={6} lg={4} className=\"mb-4\">\r\n            <Card className=\"h-100\">\r\n              <Card.Img variant=\"top\" src={animal.photo} />\r\n              <Card.Body>\r\n                <Card.Title>{animal.name}</Card.Title>\r\n                <Card.Text>\r\n                  <strong>Género:</strong> {animal.gender}<br />\r\n                  <strong>Edad:</strong> {calculateAge(animal.birthDate)}<br />\r\n                  <strong>Status:</strong> {animal.status}\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Ver más</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimalList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}