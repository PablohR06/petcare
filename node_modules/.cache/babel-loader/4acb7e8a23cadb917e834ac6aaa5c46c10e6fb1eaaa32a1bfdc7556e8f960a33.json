{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\my-app\\\\src\\\\SuperAdminContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperAdminContext = /*#__PURE__*/createContext();\n\n// Hook para usar el contexto\nexport const useSuperAdmin = () => {\n  _s();\n  return useContext(SuperAdminContext);\n};\n\n// Proveedor del contexto\n_s(useSuperAdmin, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SuperAdminProvider = ({\n  children\n}) => {\n  _s2();\n  const [superAdmin, setSuperAdmin] = useState(null);\n  const login = (email, password) => {\n    // Implementar la lógica de autenticación aquí\n    if (email === 'superadmindefinitivo@gmail.com' && password === 'superadmindefinitivo135') {\n      setSuperAdmin({\n        email\n      });\n    } else {\n      throw new Error('Credenciales incorrectas');\n    }\n  };\n  const logout = () => {\n    setSuperAdmin(null);\n  };\n  return /*#__PURE__*/_jsxDEV(SuperAdminContext.Provider, {\n    value: {\n      superAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s2(SuperAdminProvider, \"SaKWBl8XdtVLYzLia3COJVohEio=\");\n_c = SuperAdminProvider;\nvar _c;\n$RefreshReg$(_c, \"SuperAdminProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SuperAdminContext","useSuperAdmin","_s","SuperAdminProvider","children","_s2","superAdmin","setSuperAdmin","login","email","password","Error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Proyectos/my-app/src/SuperAdminContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Crear el contexto\r\nconst SuperAdminContext = createContext();\r\n\r\n// Hook para usar el contexto\r\nexport const useSuperAdmin = () => {\r\n  return useContext(SuperAdminContext);\r\n};\r\n\r\n// Proveedor del contexto\r\nexport const SuperAdminProvider = ({ children }) => {\r\n  const [superAdmin, setSuperAdmin] = useState(null);\r\n\r\n  const login = (email, password) => {\r\n    // Implementar la lógica de autenticación aquí\r\n    if (email === 'superadmindefinitivo@gmail.com' && password === 'superadmindefinitivo135') {\r\n      setSuperAdmin({ email });\r\n    } else {\r\n      throw new Error('Credenciales incorrectas');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setSuperAdmin(null);\r\n  };\r\n\r\n  return (\r\n    <SuperAdminContext.Provider value={{ superAdmin, login, logout }}>\r\n      {children}\r\n    </SuperAdminContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAON,UAAU,CAACI,iBAAiB,CAAC;AACtC,CAAC;;AAED;AAAAE,EAAA,CAJaD,aAAa;AAK1B,OAAO,MAAME,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,IAAID,KAAK,KAAK,gCAAgC,IAAIC,QAAQ,KAAK,yBAAyB,EAAE;MACxFH,aAAa,CAAC;QAAEE;MAAM,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;IAC7C;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBL,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACER,OAAA,CAACC,iBAAiB,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEE,KAAK;MAAEI;IAAO,CAAE;IAAAR,QAAA,EAC9DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAACb,GAAA,CArBWF,kBAAkB;AAAAgB,EAAA,GAAlBhB,kBAAkB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}