{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\my-app\\\\src\\\\SuperAdminContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperAdminContext = /*#__PURE__*/createContext();\nexport const useSuperAdmin = () => {\n  _s();\n  return useContext(SuperAdminContext);\n};\n_s(useSuperAdmin, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SuperAdminProvider = ({\n  children\n}) => {\n  _s2();\n  const [superAdmin, setSuperAdmin] = useState(null);\n  const [users, setUsers] = useState(() => {\n    const savedUsers = localStorage.getItem('users');\n    return savedUsers ? JSON.parse(savedUsers) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n  const login = (email, password) => {\n    const foundUser = users.find(user => user.email === email && user.password === password);\n    if (foundUser) {\n      setSuperAdmin(foundUser);\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  };\n  const register = newUser => {\n    const userExists = users.some(user => user.email === newUser.email);\n    if (userExists) {\n      throw new Error('User already exists');\n    } else {\n      setUsers([...users, newUser]);\n    }\n  };\n  const logout = () => {\n    setSuperAdmin(null);\n  };\n  return /*#__PURE__*/_jsxDEV(SuperAdminContext.Provider, {\n    value: {\n      superAdmin,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(SuperAdminProvider, \"zEJI8ewV1W5/7SDz8haHiDjAvw8=\");\n_c = SuperAdminProvider;\nvar _c;\n$RefreshReg$(_c, \"SuperAdminProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","SuperAdminContext","useSuperAdmin","_s","SuperAdminProvider","children","_s2","superAdmin","setSuperAdmin","users","setUsers","savedUsers","localStorage","getItem","JSON","parse","setItem","stringify","login","email","password","foundUser","find","user","Error","register","newUser","userExists","some","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Proyectos/my-app/src/SuperAdminContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst SuperAdminContext = createContext();\r\n\r\nexport const useSuperAdmin = () => {\r\n  return useContext(SuperAdminContext);\r\n};\r\n\r\nexport const SuperAdminProvider = ({ children }) => {\r\n  const [superAdmin, setSuperAdmin] = useState(null);\r\n  const [users, setUsers] = useState(() => {\r\n    const savedUsers = localStorage.getItem('users');\r\n    return savedUsers ? JSON.parse(savedUsers) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n  }, [users]);\r\n\r\n  const login = (email, password) => {\r\n    const foundUser = users.find((user) => user.email === email && user.password === password);\r\n    if (foundUser) {\r\n      setSuperAdmin(foundUser);\r\n    } else {\r\n      throw new Error('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  const register = (newUser) => {\r\n    const userExists = users.some((user) => user.email === newUser.email);\r\n    if (userExists) {\r\n      throw new Error('User already exists');\r\n    } else {\r\n      setUsers([...users, newUser]);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setSuperAdmin(null);\r\n  };\r\n\r\n  return (\r\n    <SuperAdminContext.Provider value={{ superAdmin, login, register, logout }}>\r\n      {children}\r\n    </SuperAdminContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,OAAOP,UAAU,CAACK,iBAAiB,CAAC;AACtC,CAAC;AAACE,EAAA,CAFWD,aAAa;AAI1B,OAAO,MAAME,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACvC,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC,MAAMC,SAAS,GAAGZ,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACJ,KAAK,KAAKA,KAAK,IAAII,IAAI,CAACH,QAAQ,KAAKA,QAAQ,CAAC;IAC1F,IAAIC,SAAS,EAAE;MACbb,aAAa,CAACa,SAAS,CAAC;IAC1B,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,QAAQ,GAAIC,OAAO,IAAK;IAC5B,MAAMC,UAAU,GAAGlB,KAAK,CAACmB,IAAI,CAAEL,IAAI,IAAKA,IAAI,CAACJ,KAAK,KAAKO,OAAO,CAACP,KAAK,CAAC;IACrE,IAAIQ,UAAU,EAAE;MACd,MAAM,IAAIH,KAAK,CAAC,qBAAqB,CAAC;IACxC,CAAC,MAAM;MACLd,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiB,OAAO,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBrB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACER,OAAA,CAACC,iBAAiB,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAExB,UAAU;MAAEW,KAAK;MAAEO,QAAQ;MAAEI;IAAO,CAAE;IAAAxB,QAAA,EACxEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAAC7B,GAAA,CAtCWF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}